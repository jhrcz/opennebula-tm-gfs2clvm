#!/bin/bash

set -x
exec 2>/tmp/err-$$.txt

# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# DELETE <host:remote_system_ds/disk.i|host:remote_system_ds/>
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host

DST=$1
VM_ID=$2
DS_ID=$3

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

. $TMCOMMON

#-------------------------------------------------------------------------------
# Return if deleting a disk, we will delete them when removing the
# remote_system_ds directory for the VM (remotely)
#-------------------------------------------------------------------------------
DST_PATH=`arg_path $DST`
DST_HOST=`arg_host $DST`

# Delete the device if it's a clone (LVM snapshot)
DELETE_CMD=$(cat <<EOF
    DEV=\$(readlink $DST_PATH)
    LV=\$(basename \$DEV)

    # volume naming schema:
    #   lv-one-{IMGID} 			... persistent volume
    #   lv-one-{PARENTIMGID-{VMID}-{DISKID} ... nonpersistent volume cloned from persistnent at vm creation
    #   lv-one-{VMID}-{DISKID} 		... nonpersistnet volume initialized at vm creation

    LV_NAME_ELEMENT_3="\$(echo \$LV|cut -d- -f3)"
    LV_NAME_ELEMENT_4="\$(echo \$LV|cut -d- -f4)"
    LV_NAME_ELEMENT_5="\$(echo \$LV|cut -d- -f5)"

    # lv-one-{PARENTIMGID-{VMID}-{DISKID}
    if [ -n "\$LV_NAME_ELEMENT_4" -a -n "\$LV_NAME_ELEMENT_5" ]
    then
        VM="\$LV_NAME_ELEMENT_4"
        DISK_ID="\$LV_NAME_ELEMENT_5"
    fi

    # lv-one-{VMID}-{DISKID} , reusing values from previous parsing
    if [ -z "\$LV_NAME_ELEMENT_5" -a -n "\$LV_NAME_ELEMENT_3" -a -n "\$LV_NAME_ELEMENT_4" ]
    then
        VM="\$LV_NAME_ELEMENT_3"
        DISK_ID="\$LV_NAME_ELEMENT_4"
    fi

    if [ -n "\$VM" -a -n "\$DISK_ID" ]; then
        $SUDO $LVREMOVE -f \$DEV
    fi
EOF
)

if [ `is_disk $DST_PATH` -eq 1 ]; then
    # Disk
    ssh_exec_and_log "$DST_HOST" "$DELETE_CMD" \
        "Error deleting $DST_PATH"
else
    # Directory
    log "Deleting $DST_PATH"
    ssh_exec_and_log "$DST_HOST" "rm -rf $DST_PATH" "Error deleting $DST_PATH"
fi

exit 0
